# GitLab CI/CD 配置文件
# ETL 專案自動化部署

stages:
  - test
  - deploy

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.pip-cache"
  GIT_SSL_NO_VERIFY: "true"  # 允許忽略 SSL 證書驗證

cache:
  paths:
    - .pip-cache/
    - venv/

# 測試階段
test_connection:
  stage: test
  tags:
    - rocky
  before_script:
    - git config --global http.sslVerify false  # 配置 git 忽略 SSL 驗證
    - echo "設置 git SSL 驗證..."
  script:
    - echo "開始進行資料庫連線測試..."
    - dnf install -y unixODBC unixODBC-devel || echo "ODBC 相關套件安裝失敗，可能需要 sudo 權限"
    - curl https://packages.microsoft.com/config/rhel/9/prod.repo > mssql-release.repo
    - if [ -w /etc/yum.repos.d/ ]; then
        cp mssql-release.repo /etc/yum.repos.d/;
        ACCEPT_EULA=Y dnf install -y msodbcsql17;
      else
        echo "無法安裝 MSSQL ODBC 驅動程式，請確保已經預先安裝";
      fi
    - dnf install -y gcc-c++ python3-devel || echo "開發工具安裝失敗，可能需要 sudo 權限"
    - python3 -m venv venv
    - source venv/bin/activate
    - pip install --upgrade pip
    - pip install pyodbc pandas
    - echo "檢查資料庫設定..."
    - grep -A 5 "mes_db" db.json || echo "警告：找不到 MES 資料庫配置"
    - grep -A 5 "tableau_db" db.json || echo "警告：找不到 Tableau 資料庫配置"
    - grep -A 5 "sap_db" db.json || echo "警告：找不到 SAP 資料庫配置"
    - python app.py || echo "連線測試失敗，請確認 ODBC 驅動程式是否正確安裝"
  artifacts:
    paths:
      - etl_log.log
    expire_in: 1 week
  only:
    - main
    - merge_requests

# 部署階段
deploy_etl:
  stage: deploy
  tags:
    - rocky
  before_script:
    - git config --global http.sslVerify false  # 配置 git 忽略 SSL 驗證
  script:
    - echo "開始進行 ETL 部署..."
    - chmod +x setup.sh
    - ./setup.sh install || echo "安裝過程失敗，可能需要 sudo 權限，請檢查日誌"
  only:
    - main
  artifacts:
    paths:
      - setup_log.txt
      - etl_log.log
    expire_in: 1 week
  environment:
    name: production